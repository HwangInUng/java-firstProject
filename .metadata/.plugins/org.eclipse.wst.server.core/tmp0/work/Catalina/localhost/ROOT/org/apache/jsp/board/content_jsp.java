/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.70
 * Generated at: 2023-01-11 08:50:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import board.domain.Board;
import board.repository.BoardDAO;

public final class content_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


	BoardDAO boardDAO = new BoardDAO();

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/inc/header_link.jsp", Long.valueOf(1673414711000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("board.repository.BoardDAO");
    _jspx_imports_classes.add("board.domain.Board");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write('\n');
      out.write('\n');

	String board_idx = request.getParameter("board_idx");

	Board board = boardDAO.select(Integer.parseInt(board_idx));

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>글 등록</title>\n");
      out.write("\n");
      out.write("<!-- Latest compiled and minified CSS -->\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css\">\n");
      out.write("\n");
      out.write("<!-- jQuery library -->\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/jquery@3.6.1/dist/jquery.slim.min.js\"></script>\n");
      out.write("\n");
      out.write("<!-- Popper JS -->\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>\n");
      out.write("\n");
      out.write("<!-- Latest compiled JavaScript -->\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js\"></script>\n");
      out.write("\n");
      out.write("<!-- CKEditor -->\n");
      out.write("<script src=\"https://cdn.ckeditor.com/ckeditor5/35.4.0/classic/ckeditor.js\"></script>");
      out.write("\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("	function update(){\n");
      out.write("		if(confirm(\"삭제하시겠습니까?\")){\n");
      out.write("			$(\"#contentForm\").attr({\n");
      out.write("				\"action\" : \"/board/update\",\n");
      out.write("				\"method\" : \"post\",\n");
      out.write("				\"enctype\" : \"multipart/form-data\"\n");
      out.write("			});\n");
      out.write("			$(\"#contentForm\").submit();\n");
      out.write("		}\n");
      out.write("	};\n");
      out.write("	\n");
      out.write("	function del(){\n");
      out.write("		if(confirm(\"삭제하시겠습니까?\")){\n");
      out.write("			$(\"#contentForm\").attr({\n");
      out.write("				\"action\" : \"/board/delete\",\n");
      out.write("				\"method\" : \"post\"\n");
      out.write("			});\n");
      out.write("			$(\"#contentForm\").submit();\n");
      out.write("		}\n");
      out.write("	}\n");
      out.write("\n");
      out.write("	function preview(obj){\n");
      out.write("		let reader = new FileReader();\n");
      out.write("		reader.onload = function(e){\n");
      out.write("			$(\"#pic\").attr(\"src\", e.target.result);\n");
      out.write("		};\n");
      out.write("		reader.readAsDataURL(obj);\n");
      out.write("	};\n");
      out.write("\n");
      out.write("	$(function(){\n");
      out.write("		ClassicEditor\n");
      out.write("		.create( document.querySelector( '#content' ) )\n");
      out.write("		.catch( error => {\n");
      out.write("		    console.error( error );\n");
      out.write("		} );\n");
      out.write("		\n");
      out.write("		//버튼 이벤트 연결\n");
      out.write("		$($(\"button\")[0]).on(\"click\", function(){\n");
      out.write("			update();\n");
      out.write("		});\n");
      out.write("		$($(\"button\")[1]).on(\"click\", function(){\n");
      out.write("			del();\n");
      out.write("		});\n");
      out.write("		$($(\"button\")[2]).on(\"click\", function(){\n");
      out.write("			location.href=\"/board/list.jsp\";\n");
      out.write("		});\n");
      out.write("		$(\"#file\").on(\"change\", function(){\n");
      out.write("			preview(this.files[0]);\n");
      out.write("		});\n");
      out.write("	})\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("	<div class=\"container mt-2\">\n");
      out.write("		<form id=\"contentForm\">\n");
      out.write("				<input type=\"hidden\" value=\"");
      out.print(board.getBoard_idx());
      out.write("\" name=\"board_idx\">\n");
      out.write("				<input type=\"hidden\" value=\"");
      out.print(board.getFileName());
      out.write("\" name=\"fileName\">\n");
      out.write("			<div class=\"row text-center\">\n");
      out.write("				<h3>글 등록</h3>\n");
      out.write("			</div>\n");
      out.write("\n");
      out.write("			<div class=\"row mt-3\">\n");
      out.write("				<input type=\"text\" class=\"form-control\" value=\"");
      out.print(board.getTitle());
      out.write("\" name=\"title\">\n");
      out.write("			</div>\n");
      out.write("\n");
      out.write("			<div class=\"row mt-3\">\n");
      out.write("				<input type=\"text\" class=\"form-control\" value=\"");
      out.print(board.getWriter());
      out.write("\" name=\"writer\">\n");
      out.write("			</div>\n");
      out.write("\n");
      out.write("			<div class=\"row mt-3\">\n");
      out.write("				<textarea id=\"content\" name=\"content\">");
      out.print(board.getContent());
      out.write("</textarea>\n");
      out.write("			</div>\n");
      out.write("			\n");
      out.write("			<div class=\"row mt-3\">\n");
      out.write("				<img src=\"/data/");
      out.print(board.getFileName());
      out.write("\" id=\"pic\" width=\"200px\">\n");
      out.write("			</div>\n");
      out.write("\n");
      out.write("			<div class=\"row mt-3\">\n");
      out.write("				<input class=\"form-control\" type=\"file\" name=\"file\" id=\"file\">\n");
      out.write("			</div>\n");
      out.write("\n");
      out.write("			<div class=\"row mt-3\">\n");
      out.write("				<div class=\"col text-center\">\n");
      out.write("					<button type=\"button\" class=\"btn btn-dark text-white\">수정</button>\n");
      out.write("					<button type=\"button\" class=\"btn btn-dark text-white\">삭제</button>\n");
      out.write("					<button type=\"button\" class=\"btn btn-dark text-white\">목록</button>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("			\n");
      out.write("		</form>\n");
      out.write("		\n");
      out.write("	</div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
