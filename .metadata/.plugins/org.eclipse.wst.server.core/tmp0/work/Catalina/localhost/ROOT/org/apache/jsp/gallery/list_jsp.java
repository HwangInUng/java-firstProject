/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.70
 * Generated at: 2023-01-10 07:36:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.gallery;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import memeber.domain.Member;
import gallery.repository.GalleryDAO;
import gallery.domain.Gallery;
import java.util.List;
import gallery.util.PageManager;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

PageManager pageManager = new PageManager();
	GalleryDAO galleryDAO = new GalleryDAO();
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("gallery.util.PageManager");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("gallery.repository.GalleryDAO");
    _jspx_imports_classes.add("gallery.domain.Gallery");
    _jspx_imports_classes.add("memeber.domain.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write('\n');
      out.write('\n');

List<Gallery> list = galleryDAO.selectAll();

pageManager.init(list, request);

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	");

		Member member= (Member)session.getAttribute("member");
	
      out.write('\n');
      out.write('	');
if(member == null){ 
      out.write("\n");
      out.write("		<span><a href=\"/member/login.html\">Login</a></span>\n");
      out.write("	");
 } else{
      out.write("\n");
      out.write("		<h3>");
      out.print(member.getName());
      out.write("님 이용중</h3>\n");
      out.write("		<span><a href=\"/member/logout.jsp\">Logout</a></span>\n");
      out.write("	");
 }
      out.write("\n");
      out.write("	<table width=\"100%\" border=\"1px\">\n");
      out.write("		<tr>\n");
      out.write("			<th>No</th>\n");
      out.write("			<th>이미지</th>\n");
      out.write("			<th>제목</th>\n");
      out.write("			<th>작성자</th>\n");
      out.write("			<th>등록일</th>\n");
      out.write("			<th>조회수</th>\n");
      out.write("		</tr>\n");
      out.write("		");

		int curPos = pageManager.getCurPos();
		int num = pageManager.getNum();
		for (int i = 0; i < pageManager.getPageSize(); i++) {
			if (num < 1)
				break;
			Gallery gallery = list.get(curPos++);
		
      out.write("\n");
      out.write("		<tr>\n");
      out.write("			<th>");
      out.print(num--);
      out.write("</th>\n");
      out.write("			<th><img src=\"/data/");
      out.print(gallery.getFileName());
      out.write("\" width=\"50px\"></th>\n");
      out.write("			<th><a href=\"/gallery/content.jsp?gallery_idx=");
      out.print(gallery.getGalleryIdx());
      out.write('"');
      out.write('>');
      out.print(gallery.getTitle());
      out.write("</a></th>\n");
      out.write("			<th>");
      out.print(gallery.getWriter());
      out.write("</th>\n");
      out.write("			<th>");
      out.print(gallery.getRegdate());
      out.write("</th>\n");
      out.write("			<th>");
      out.print(gallery.getHit());
      out.write("</th>\n");
      out.write("		</tr>\n");
      out.write("		");
}
      out.write("\n");
      out.write("		<tr>\n");
      out.write("			<td colspan=\"6\">\n");
      out.write("				<button onClick=\"location.href='/gallery/regist.jsp'\">글 등록</button>\n");
      out.write("			</td>\n");
      out.write("		</tr>\n");
      out.write("	</table>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
