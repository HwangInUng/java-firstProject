/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.70
 * Generated at: 2023-01-06 05:34:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.notice;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.util.*;
import com.edu.noticeapp.repository.NoticeDAO;
import com.edu.noticeapp.domain.Notice;

public final class content_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


  NoticeDAO noticeDAO = new NoticeDAO();


  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.edu.noticeapp.domain.Notice");
    _jspx_imports_classes.add("com.edu.noticeapp.repository.NoticeDAO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write('\n');
      out.write('\n');

  int notice_idx = Integer.parseInt(request.getParameter("notice_idx"));
  Notice notice = noticeDAO.select(notice_idx);
  
  noticeDAO.updateHit(notice_idx);

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("\n");
      out.write("<head>\n");
      out.write("  <meta charset=\"utf-8\">\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("  <style>\n");
      out.write("    body {\n");
      out.write("      font-family: Arial, Helvetica, sans-serif;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    * {\n");
      out.write("      box-sizing: border-box;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    input[type=text],\n");
      out.write("    select,\n");
      out.write("    textarea {\n");
      out.write("      width: 100%;\n");
      out.write("      padding: 12px;\n");
      out.write("      border: 1px solid #ccc;\n");
      out.write("      border-radius: 4px;\n");
      out.write("      box-sizing: border-box;\n");
      out.write("      margin-top: 6px;\n");
      out.write("      margin-bottom: 16px;\n");
      out.write("      resize: vertical;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    input[type=button] {\n");
      out.write("      background-color: #04AA6D;\n");
      out.write("      color: white;\n");
      out.write("      padding: 12px 20px;\n");
      out.write("      border: none;\n");
      out.write("      border-radius: 4px;\n");
      out.write("      cursor: pointer;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    input[type=button]:hover {\n");
      out.write("      background-color: #45a049;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .container {\n");
      out.write("      border-radius: 5px;\n");
      out.write("      background-color: #f2f2f2;\n");
      out.write("      padding: 20px;\n");
      out.write("    }\n");
      out.write("  </style>\n");
      out.write("  <script src=\"https://cdn.ckeditor.com/ckeditor5/35.4.0/classic/ckeditor.js\"></script>\n");
      out.write("  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js\"></script>\n");
      out.write("  <script>\n");
      out.write("    $(()=>{\n");
      out.write("      $($(\"input[type='button']\")[0]).on(\"click\", () => {\n");
      out.write("        if(confirm(\"수정하시겠습니까?\")){\n");
      out.write("          $(\"form\").submit();\n");
      out.write("        }\n");
      out.write("      });\n");
      out.write("      $($(\"input[type='button']\")[1]).on(\"click\", () => {\n");
      out.write("        if(confirm(\"정말 삭제하시겠습니까?\")){\n");
      out.write("          location.href=\"/notice/delete?notice_idx=");
      out.print(notice.getNoticeIdx());
      out.write("\";\n");
      out.write("        }\n");
      out.write("      });\n");
      out.write("      $($(\"input[type='button']\")[2]).on(\"click\", () => {\n");
      out.write("        location.href=\"/notice/list.jsp\";\n");
      out.write("      });\n");
      out.write("    })      \n");
      out.write("  </script>\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("  <h3>상세보기</h3>\n");
      out.write("\n");
      out.write("  <div class=\"container\">\n");
      out.write("    <form method=\"post\" action=\"/notice/edit?notice_idx=");
      out.print(notice.getNoticeIdx());
      out.write("\"> \n");
      out.write("      ");
      out.write("\n");
      out.write("      <input type=\"text\" name=\"title\" placeholder=\"Your name..\" value=\"");
      out.print(notice.getTitle());
      out.write("\">\n");
      out.write("\n");
      out.write("      <input type=\"text\" name=\"writer\" placeholder=\"Your last name..\" value=\"");
      out.print(notice.getWriter());
      out.write("\">\n");
      out.write("\n");
      out.write("      </select>\n");
      out.write("\n");
      out.write("      <label for=\"subject\">내용</label>\n");
      out.write("      <textarea id=\"content\" name=\"content\" placeholder=\"Write something..\" style=\"height:200px\">");
      out.print(notice.getContent());
      out.write("</textarea>\n");
      out.write("\n");
      out.write("      <!-- submit 속성은 무조건 form 태그의 내용을 전송함 -->\n");
      out.write("      <input type=\"button\" value=\"edit\">\n");
      out.write("      <input type=\"button\" value=\"del\">\n");
      out.write("      <input type=\"button\" value=\"list\">\n");
      out.write("    </form>\n");
      out.write("  </div>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
